version: "3.9"          # Supported by both podman-compose and Docker Compose v2+

###############################################################################
#  NETWORKS + VOLUMES â€“ declared first so they can be referenced later
###############################################################################
networks:
  mcpnet:               # Single user-defined bridge network keeps traffic private
    driver: bridge

volumes:                # Named volumes survive podman-compose down/up
  pgdata:
  mariadbdata:
  mysqldata:
  mongodata:
  pgadmindata:

###############################################################################
#  CORE SERVICE â€“ MCP Gateway
###############################################################################
services:

  gateway:
    image: localhost/mcpgateway/mcpgateway
    build:
      context: .
      dockerfile: Containerfile     # Same one the Makefile builds
    restart: unless-stopped
    ports:
      - "4444:4444"                 # HTTP (or HTTPS if SSL=true is set)
    networks: [mcpnet]

    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    # Environment â€“ pick ONE database URL line, comment the rest
    # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    environment:
      - HOST=0.0.0.0
      - PORT=4444
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-mysecretpassword}@postgres:5432/mcp
      # - DATABASE_URL=mysql+pymysql://mysql:${MYSQL_PASSWORD:-changeme}@mysql:3306/mcp
      # - DATABASE_URL=mysql+pymysql://admin:${MARIADB_PASSWORD:-changeme}@mariadb:3306/mcp
      # - DATABASE_URL=mongodb://admin:${MONGO_PASSWORD:-changeme}@mongodb:27017/mcp
      - CACHE_TYPE=redis # backend for caching (memory, redis, database, or none)
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=changeme
      - BASIC_AUTH_USER=admin
      - BASIC_AUTH_PASSWORD=changeme
      # - SSL=true
      # - CERT_FILE=/app/certs/cert.pem
      # - KEY_FILE=/app/certs/key.pem

    depends_on:          # Default stack: Postgres + Redis
      postgres:
        condition: service_healthy   # â–¶ wait for DB
      redis:
        condition: service_started

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4444/health"]
      #test: ["CMD", "curl", "-f", "https://localhost:4444/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

    # volumes:
    #   - ./certs:/app/certs:ro   # mount certs folder read-only      

###############################################################################
#  DATABASES â€“ enable ONE of these blocks and adjust DATABASE_URL
###############################################################################

  postgres:              # Official image â€“ super-easy defaults
    image: postgres:17
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=mcp
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [mcpnet]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s

  # mariadb:
  #   image: mariadb:11
  #   environment:
  #     - MARIADB_ROOT_PASSWORD=mysecretpassword
  #     - MARIADB_DATABASE=mcp
  #     - MARIADB_USER=admin
  #     - MARIADB_PASSWORD=changeme
  #   volumes: [mariadbdata:/var/lib/mysql]
  #   networks: [mcpnet]

  # mysql:
  #   image: mysql:8
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=mysecretpassword
  #     - MYSQL_DATABASE=mcp
  #     - MYSQL_USER=mysql
  #     - MYSQL_PASSWORD=changeme
  #   volumes: [mysqldata:/var/lib/mysql]
  #   networks: [mcpnet]

  # mongodb:
  #   image: mongo:7
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=admin
  #     - MONGO_INITDB_ROOT_PASSWORD=changeme
  #     - MONGO_INITDB_DATABASE=mcp
  #   volumes: [mongodata:/data/db]
  #   networks: [mcpnet]

###############################################################################
#  CACHE
###############################################################################
  redis:
    image: redis:latest
    ports:
      - "6379:6379"      # expose only if you want host access
    networks: [mcpnet]

###############################################################################
#  OPTIONAL ADMIN TOOLS â€“ handy web UIs for DB & cache (disabled by default)
###############################################################################
  pgadmin:              # ðŸ”§ Postgres admin UI
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=changeme
    ports:
      - "5050:80"      # http://localhost:5050
    volumes:
      - pgadmindata:/var/lib/pgadmin
    networks: [mcpnet]
    depends_on:
      postgres:
        condition: service_healthy

  redis_commander:       # ðŸ”§ Redis key browser
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"    # http://localhost:8081
    networks: [mcpnet]
    depends_on:
      redis:
        condition: service_started

  # mongo_express:         # ðŸ”§ MongoDB GUI (works if mongodb service is enabled)
  #   image: mongo-express:1
  #   environment:
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=changeme
  #     - ME_CONFIG_MONGODB_SERVER=mongodb
  #   ports:
  #     - "8082:8081"    # http://localhost:8082
  #   networks: [mcpnet]
  #   depends_on:
  #     mongodb:
  #       condition: service_started

  # phpmyadmin:            # ðŸ”§ MySQL / MariaDB GUI
  #   image: phpmyadmin:latest
  #   environment:
  #     - PMA_HOST=mysql   # or mariadb
  #     - PMA_USER=mysql
  #     - PMA_PASSWORD=changeme
  #     - PMA_ARBITRARY=1  # allow login to any host if you switch DBs
  #   ports:
  #     - "8083:80"      # http://localhost:8083
  #   networks: [mcpnet]
  #   depends_on:
  #     mysql:
  #       condition: service_started

###############################################################################
#  OPTIONAL MCP SERVERS â€“ drop-in helpers the Gateway can call
# ###############################################################################
#   mcp_time:
#     image: mcp/time:latest
#     networks: [mcpnet]

#   mcp_playwright:
#     image: mcp/playwright:latest
#     networks: [mcpnet]

#   mcp_postgres:
#     image: mcp/postgres:latest
#     networks: [mcpnet]

#   mcp_github:
#     image: mcp/github:latest
#     networks: [mcpnet]

#   mcp_filesystem:
#     image: mcp/filesystem:latest
#     networks: [mcpnet]

#   mcp_perplexity_ask:
#     image: mcp/perplexity-ask:latest
#     networks: [mcpnet]

#   mcp_memory:
#     image: mcp/memory:latest
#     networks: [mcpnet]

#   mcp_fetch:
#     image: mcp/fetch:latest
#     networks: [mcpnet]
