# ===============================================================
# ☁️  MCP Gateway ▸ Build, Cache & Deploy to Google Cloud Run
# ===============================================================
#
# This workflow:
#   • Restores / updates a local **BuildKit layer cache**  ❄️
#   • Builds the Docker image from **Containerfile.lite**  🏗️
#   • Pushes the image to **Google Artifact Registry**     📤
#   • Deploys to **Google Cloud Run** with autoscale=1     🚀
#
# ---------------------------------------------------------------
# Required repository **secrets**
# ---------------------------------------------------------------
#  ┌────────────────────────┬────────────────────────────────┐
#  │ Secret name            │ Example value                  │
#  ├────────────────────────┼────────────────────────────────┤
#  │ GCP_SERVICE_KEY        │ JSON string for gcloud auth    │
#  └────────────────────────┴────────────────────────────────┘
#
# ---------------------------------------------------------------
# Required repository **variables**
# ---------------------------------------------------------------
#  ┌────────────────────────────┬──────────────────────────────┐
#  │ Variable name              │ Example value                │
#  ├────────────────────────────┼──────────────────────────────┤
#  │ GCP_PROJECT_ID             │ my-gcp-project               │
#  │ GCP_REGION                 │ us-central1                  │
#  │ GAR_REPO_NAME              │ mcpgateway                   │
#  │ IMAGE_NAME                 │ mcpgateway                   │
#  │ CLOUD_RUN_SERVICE          │ mcpgateway                   │
#  │ CLOUD_RUN_PORT             │ "4444"                       │
#  └────────────────────────────┴──────────────────────────────┘
#
# Triggers:
#   • Every push to `main`
# ===============================================================

name: Deploy to Google Cloud Run

on:
  push:
    branches: ["main"]

permissions:
  contents: read

env:
  GITHUB_SHA: ${{ github.sha }}
  CACHE_DIR: /tmp/.buildx-cache

  GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  GCP_REGION: ${{ vars.GCP_REGION }}

  GAR_REPO_NAME: ${{ vars.GAR_REPO_NAME }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  IMAGE_TAG: ${{ github.sha }}

  CLOUD_RUN_SERVICE: ${{ vars.CLOUD_RUN_SERVICE }}
  CLOUD_RUN_PORT: ${{ vars.CLOUD_RUN_PORT }}

jobs:
  build-push-deploy:
    name: 🚀 Build, Cache, Push & Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      # -----------------------------------------------------------
      # 0️⃣  Checkout repository
      # -----------------------------------------------------------
      - name: ⬇️  Checkout source
        uses: actions/checkout@v4

      # -----------------------------------------------------------
      # 1️⃣  Authenticate to Google Cloud
      # -----------------------------------------------------------
      - name: 🔐  Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_KEY }}

      - name: 🧰  Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          install_components: gcloud, docker
          export_default_credentials: true

      # -----------------------------------------------------------
      # 2️⃣  Set up Docker Buildx + cache
      # -----------------------------------------------------------
      - name: 🛠️  Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔄  Restore BuildKit cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      # -----------------------------------------------------------
      # 3️⃣  Configure Docker to use gcloud auth
      # -----------------------------------------------------------
      - name: 🔧  Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      # -----------------------------------------------------------
      # 4️⃣  Build & tag image
      # -----------------------------------------------------------
      - name: 🏗️  Build Docker image
        run: |
          docker buildx build \
            --file Containerfile.lite \
            --tag ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            --cache-from type=local,src=${{ env.CACHE_DIR }} \
            --cache-to   type=local,dest=${{ env.CACHE_DIR }},mode=max \
            --load \
            .

      # -----------------------------------------------------------
      # 5️⃣  Push image to Artifact Registry
      # -----------------------------------------------------------
      - name: 📤  Push image to GAR
        run: |
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      # -----------------------------------------------------------
      # 6️⃣  Deploy to Cloud Run
      # -----------------------------------------------------------
      - name: 🚀  Deploy to Cloud Run
        run: |
          gcloud run deploy "$CLOUD_RUN_SERVICE" \
            --image $GCP_REGION-docker.pkg.dev/$GCP_PROJECT_ID/$GAR_REPO_NAME/$IMAGE_NAME:$IMAGE_TAG \
            --region "$GCP_REGION" \
            --platform managed \
            --allow-unauthenticated \
            --port "$CLOUD_RUN_PORT" \
            --cpu=2 \
            --memory=2Gi \
            --max-instances=1 \
            --set-env-vars=JWT_SECRET_KEY=your-secret,BASIC_AUTH_USER=admin,BASIC_AUTH_PASSWORD=changeme,AUTH_REQUIRED=true
