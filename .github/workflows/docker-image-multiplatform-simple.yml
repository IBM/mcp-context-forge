# ===============================================================
# üì¶ Simple Multiplatform Docker Build Workflow
# ===============================================================
#
# This workflow builds multiplatform Docker images using a simpler approach:
# 1. Builds both platforms in a single job
# 2. Uses proper lowercase repository names
# 3. Creates timestamped tags for traceability
# 4. More reliable than matrix-based approach
# ===============================================================

name: Simple Multiplatform Docker Build

on:
  workflow_dispatch:
    inputs:
      platforms:
        description: 'Platforms to build (comma-separated)'
        required: false
        default: 'linux/amd64,linux/arm64'
  push:
    branches: ["main"]
    paths:
      - 'Containerfile.lite'
      - 'mcpgateway/**'
      - 'plugins/**'
      - 'pyproject.toml'
  pull_request:
    branches: ["main"]
    paths:
      - 'Containerfile.lite'
      - 'mcpgateway/**'
      - 'plugins/**'
      - 'pyproject.toml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-multiplatform:
    runs-on: ubuntu-latest
    
    steps:
      - name: ‚¨áÔ∏è  Checkout code
        uses: actions/checkout@v4

      - name: üõ†Ô∏è  Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: üîë  Log in to GHCR
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üèóÔ∏è  Build multiplatform image
        run: |
          TAG=$(date +%s)
          IMAGE_NAME_LOWER=$(echo '${{ env.IMAGE_NAME }}' | tr '[:upper:]' '[:lower:]')
          echo "üèóÔ∏è  Building multiplatform image (linux/amd64,linux/arm64)..."
          echo "üì¶ Repository: ${{ env.REGISTRY }}/$IMAGE_NAME_LOWER"
          echo "üè∑Ô∏è  Tags: $TAG, latest"
          echo "‚ö†Ô∏è  Note: ARM64 build on AMD64 runners uses emulation and may take longer"

          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --file Containerfile.lite \
            --tag ${{ env.REGISTRY }}/$IMAGE_NAME_LOWER:$TAG \
            --tag ${{ env.REGISTRY }}/$IMAGE_NAME_LOWER:latest \
            --push \
            --progress=plain \
            .

          echo "‚úÖ Multiplatform image built and pushed successfully!"

      - name: üîç  Verify multiplatform image
        run: |
          IMAGE_NAME_LOWER=$(echo '${{ env.IMAGE_NAME }}' | tr '[:upper:]' '[:lower:]')
          echo "üîç Verifying multiplatform image..."
          docker buildx imagetools inspect ${{ env.REGISTRY }}/$IMAGE_NAME_LOWER:latest
